// version 1.0

#include "statistics.h"

#include <iostream>
#include <cmath>
#include <fstream>
#include <cstdlib>

void statistics(statistics_base& s, const colloid_base& cb, const int& col, const int& nbin)
{
	float *cb_ptr=cb.get_array_pointer();
	int *size=cb.get_size();
	s.mean=0;
	s.sd=0;
	cb_ptr=cb_ptr+col-1;
	s.min=*cb_ptr;
	s.max=*cb_ptr;
	int i;
	for (i=0; i<size[1]; i++)
	{
		s.mean+=*cb_ptr;
		s.sd+=(*cb_ptr)*(*cb_ptr);
		s.min=(s.min<=(*cb_ptr)) ? s.min : *cb_ptr;
		s.max=(s.max>=(*cb_ptr)) ? s.max : *cb_ptr;
		cb_ptr+=size[0];
	}
	s.mean/=size[1];
	s.sd=sqrt(s.sd/size[1]-s.mean*s.mean);

	if (nbin>0)
	{
		s.nbin=nbin;
		s.binsize=(s.max-s.min)/nbin;
		s.bin=new float [nbin];
		s.histogram=new int [nbin];
		for (i=0; i<nbin; i++)
		{
			s.bin[i]=s.min+(i+0.5)*s.binsize;
			s.histogram[i]=0;
		}
		cb_ptr=cb.get_array_pointer();
		cb_ptr=cb_ptr+col-1;
		for (i=0; i<size[1]; i++)
		{
			s.histogram[int(((*cb_ptr)-s.min)/s.binsize)]++;
			cb_ptr+=size[0];
		}
	}

	char outfile [] = "statistics.log";
	ofstream out (outfile);
	if ( ! out.is_open() )
	{
		cout << "Error: File can not open!\n";
		exit (1);
	}

	out << "# generated by colloid/statistics\n";
	out << "#\n";
	out << "# mean    :\t" << s.mean << endl;
	out << "# sd      :\t" << s.sd << endl;
	out << "#\n";
	out << "# min     :\t" << s.min << endl;
	out << "# max     :\t" << s.max << endl;
	out << "#\n";
	out << "# nbin    :\t" << s.nbin << endl;
	out << "# binsize :\t" << s.binsize << endl;
	out << "#\n";
	out << "# bin center : histogram\n";
	for (i=0; i<nbin; i++)
		out << s.bin[i] << ' ' << s.histogram[i] << endl;
	out.close();

	delete [] size;
}
